name: Tests, Linter & Deploy

on:
  push:
    branches:
      - master

env:
  NODE_ENV: development
  APPLICATION_NAME: ms-authentication
  APPLICATION_PORT: 8080
  DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
  DATABASE_USER: ${{ secrets.DATABASE_USER }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

jobs:
  linters:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm run check
  quality:
    needs: linters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm install
    - run: npm test
  build:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.7.8
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "jv-tcc-<%= projectName %>"
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
        env:
          NODE_ENV: production
          HD_APPLICATION_NAME: <%= projectName %>
          HD_DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          HD_DATABASE_USER: ${{ secrets.DATABASE_USER }}
          HD_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}